################################################################################
# Copyright (c) 2015 by Prakhar Goyal.
# All Rights Reserved.
# THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE.
# The copyright notice above does not evidence any actual or intended publication of such source code.
################################################################################

include "cluster-common"

akka {

  remote {

    # The port clients should connect to. Default is 2552.
    netty.tcp.port = 2554

  }

  ise-thread-pool-dispatcher {
    # Dispatcher is the name of the event-based dispatcher
    type = Dispatcher
    # What kind of ExecutionService to use
    executor = "thread-pool-executor"
    # Configuration for the thread pool
    thread-pool-executor {
      # minimum number of threads to cap factor-based core number to
      core-pool-size-min = 2
      # No of core threads ... ceil(available processors * factor)
      core-pool-size-factor = 2.0
      # maximum number of threads to cap factor-based number to
      core-pool-size-max = 10
    }
    # Throughput defines the maximum number of messages to be
    # processed per actor before the thread jumps to the next actor.
    # Set to 1 for as fair as possible.
    #throughput = 100
    throughput = 1
  }

  #Demo2
  #cluster.seed-nodes = ["akka.tcp://ClusterSystem@localhost:2553"]

  # Settings for the DistributedPubSub extension
  cluster.pub-sub {
    # Actor name of the mediator actor, /system/distributedPubSubMediator
    name = distributedPubSubMediator

    # Start the mediator on members tagged with this role.
    # All members are used if undefined or empty.
    role = ""

    # The routing logic to use for 'Send'
    # Possible values: random, round-robin, broadcast
    routing-logic = random

    # How often the DistributedPubSubMediator should send out gossip information
    gossip-interval = 1s

    # Removed entries are pruned after this duration
    removed-time-to-live = 120s

    # Maximum number of elements to transfer in one message when synchronizing the registries.
    # Next chunk will be transferred in next round of gossip.
    max-delta-elements = 3000

    # The id of the dispatcher to use for DistributedPubSubMediator actors.
    # If not specified default dispatcher is used.
    # If specified you need to define the settings of the actual dispatcher.
    #use-dispatcher = ""
    use-dispatcher = "ise-thread-pool-dispatcher"

  }
}
